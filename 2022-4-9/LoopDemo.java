/*循环结构	1、while			先进行判断 在进行逻辑执行		需要四部分组成			初始化: 变量初始化			条件判断: 必须要求返回boolean值			循环体: 具体要执行的逻辑代码			迭代变量: 促使此循环结束	2、do while循环		先进行逻辑执行 再进行判断	3、for循环 			使用最多		语法规则			for(初始化1;条件表达式2;步进器4){				代码逻辑3			}		使用for循环的好处			1、代码简洁			2、变量初始化的时候 for循环的作用域仅仅是当前for循环结构				while循环的作用域是从变量的定义开始到整个方法结束	跳转语句		1、break			跳出本层循环			当包含多层循环的时候 break只能跳出内层循环 无法跳出外层循环		2、continue			跳出本次循环			*/import java.util.Scanner;public class LoopDemo{		public static void main(String[] args){				// while循环样例		// int i = 1;		// while(i <= 100){						// System.out.println("第" + i + "遍输出");			// i++;					// }				// 求100内的偶数和		// int i = 1;		// 求和最终的存储变量		// int sum = 0;		// while(i <= 100){						// if(i % 2 == 0){				// sum += i;			// }			// i++;					// }		// System.out.println("100以内的偶数和是: " + sum);				// 购物结算		// Scanner sc = new Scanner(System.in);		// String index = "";		// int count = 0;		// double tShirtPrice = 245.0;		// double tennisShoesPrice = 570.0;		// double tennisRacketPrice = 320.0;		// double totalPrice = 0;		// boolean isContinue = true;		// double discount = 1;		// double paid = 0;		// String temp;		// System.out.println("-----------------------------------------------");		// System.out.println("请选择购买的商品编号");		// System.out.println("1.T 恤    " + "2.网球鞋    " + "3.网球拍");		// System.out.println("-----------------------------------------------");		// while(isContinue){			// index = null;			// System.out.print("请输入商品编号: ");			// index = sc.next();						// System.out.print("请输入购买数量: ");			// count = sc.nextInt();						// switch(index){				// case "1":					// System.out.println("T 恤￥" + tShirtPrice + "    数量 " + count + "    合计 ￥" + (tShirtPrice * count));					// totalPrice += tShirtPrice * count;					// break;				// case "2":					// System.out.println("网球鞋￥" + tennisShoesPrice + "    数量 " + count + "    合计 ￥" + (tennisShoesPrice * count));					// totalPrice += tennisShoesPrice * count;					// break;				// case "3":					// System.out.println("网球拍￥" + tennisRacketPrice + "    数量 " + count + "    合计 ￥" + (tennisRacketPrice * count));					// totalPrice += tennisRacketPrice * count;					// break;				// default:					// System.out.println("请输入正确的编号");					// continue;			// }						// while(true){				// System.out.print("是否继续(y/n) ");				// temp = sc.next();				// if(temp.equals("y") || temp.equals("n")){								// isContinue = temp.equals("y") ? true : false;					// System.out.println();					// break;				// }				// else{									// System.out.println("请输入y/n");					// System.out.println();					// continue;							// }			// }					// }				// System.out.print("折扣: ");		// discount = sc.nextDouble();		// totalPrice *= discount;		// System.out.println("应付金额: " + totalPrice);		// System.out.print("实付金额: ");		// while(true){			// paid = sc.nextDouble();			// if(paid >= (totalPrice * discount)){								// System.out.println("找钱: " + (paid - totalPrice * discount));				// break;							// }			// else{								// System.out.print("宁输入的金额小于应付金额，请重新输入: ");				// continue;							// }					// }		// System.out.println("谢谢惠顾");				// do while		// int i = 1;		// do{			// System.out.println(i);			// i++;		// }		// while(i <= 100);				// for		// for(int i = 1;i <= 100;i++){						// System.out.println("第" + i + "遍输出");					// }				// int sum = 0;		// for(int i = 1;i <= 100;i++){			// if(i % 2 == 0){				// sum += i;			// }		// }		// System.out.println("100内偶数的和是: " + sum);				// // 年龄比例		// Scanner sc = new Scanner(System.in);		// // 存储大于30岁的人数		// int ageUp = 0;		// // 存储小于30岁的人数		// int ageDown = 0;		// for(int i = 0;i < 10;i++){						// System.out.print("请输入第" + (i + 1) + "位顾客的年龄: ");			// int age = sc.nextInt();			// if(age > 30){				// ageUp++;			// }			// else{				// ageDown++;			// }		// }				// System.out.println("超过30岁的人数比率是: " + (ageUp / 10.0 * 100) + "%");		// System.out.println("小于30岁的人数比率是: " + (ageDown / 10.0 * 100) + "%");				// 100内奇数和偶数的和		// int i = 1;		// int sum = 0;		// while(i <= 100){			// if(i % 2 == 0){				// sum += i;			// }			// i++;		// }		// System.out.println(sum);// 2550		// int sum = 0;		// for(int i = 1;i <= 100;i++){			// if(i % 2 == 0){				// sum += i;			// }		// }		// System.out.println(sum);// 2550				// 输出1 ~ 1000之间能被5整除的数 并且每行输出三个		// int i = 1;		// int j = 0;		// while(i <= 1000){			// if(j < 3 && i % 5 == 0){				// System.out.print(i + " ");				// j++;			// }			// else if(j == 3){				// System.out.println();				// j = 0;			// }						// i++;		// }		// int j = 0;		// for(int i = 0;i < 1000;i++){						// if(j < 3 && i % 5 == 0){				// System.out.print(i + " ");				// j++;			// }			// else if(j == 3){				// System.out.println();				// j = 0;			// }					// }				// 实现将10进制整数变成二进制数		// Scanner sc = new Scanner(System.in);		// System.out.print("请输入一个十进制数: ");		// int num = sc.nextInt();		// int num2 = num;		// String str = "";		// while(num != 0){						// int i = num % 2;			// str = i + str;			// num /= 2;					// }				// System.out.println("十进制是: " + num2 + " 二进制是: " + str);						// 求1 ~ 10的阶乘的和		// int sum = 0;		// int temp = 1;		// for(int i = 1;i <= 10;i++){			// temp = 1;			// for(int j = 1;j <= i;j++){				// temp *= j;			// }			// sum += temp;					// }				// System.out.println(sum);				// 生成0-100随机数 直到生成88为止 停止循环		// int i = 0;		// while(true){			// i = (int)(Math.random() * 101);						// System.out.println(i);						// if(i == 88){				// break;			// }								// }				// 打印输出(1,1) (1,2) (1,3)...直到输出(6,6)停止		// for(int i = 1;i < 10;i++){			// for(int j = 1;j < 10;j++){				// System.out.println("(" + i + "," + j + ")");				// if(i == 6 && j == 6){					// // break;					// return;				// }							// }		// }				// 把100 ~ 150之间不能被三整除的数输出		// for(int i = 100;i <= 150;i++){						// if(i % 3 == 0){				// continue;			// }			// System.out.println(i);		// }				// for(int i = 0;;i++){			// double d = 1;			// System.out.println(i);		// }				// 九九乘法表		// for(int i = 1;i <= 9;i++){						// for(int j = 1;j <= i;j++){								// System.out.print(j + "*" + i + "=" + i * j + "\t");							// }			// System.out.println();					// }				// 斐波那契数列 可以选择打印多少个值		// Scanner sc = new Scanner(System.in);		// System.out.println("请输入要打印的斐波那契数列的个数");		// int count = sc.nextInt();		// int x = 1;		// int y = 1;		// int z = 0;		// 前两位是1		// for(int i = 0;i < count;i++){						// if(i < 2){								// System.out.print(1 + "\t");						// }			// else{				// z = x + y;				// x = y;				// y = z;				// System.out.print(z + "\t");			// }					// }			}	}